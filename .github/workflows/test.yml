# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Run tests

on:
  push:
    branches: ["main", "chore/ci"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
  env:
    PORT: 8000
    DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    NODE_ENV: test
    JWT_SECRET: secret

    # Service containers to run with `test`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create schema
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data
        run: psql postgresql://postgres:postgres@localhost:5432/test_db -f db/schema.sql

      - name: Run tests
        run: npm test
